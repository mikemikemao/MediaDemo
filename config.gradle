/**
 * APP版本号、插件版本、编译相关版本管理
 */
def build_versions = [:]
build_versions.min_sdk = 26
build_versions.target_sdk = 30
build_versions.compile_sdk = 30
build_versions.android_gradle_plugin = "4.2.1"
build_versions.kotlin = '1.5.30'
build_versions.app_version_name = "1.0.0"
build_versions.app_version_code = 1000000
ext.build_versions = build_versions

/**
 * 路径常量
 */
def paths = [:]
paths.room_schema = "$projectDir/schemas"
ext.paths = paths

/**
 * 仓库地址管理
 */
def addRepos(RepositoryHandler handler) {
    handler.maven {
        url 'https://maven.aliyun.com/repository/public'
        allowInsecureProtocol true
    }
    handler.maven {
        url 'https://maven.aliyun.com/repository/google'
        allowInsecureProtocol true
    }
    handler.maven {
        url 'https://maven.aliyun.com/repository/central'
        allowInsecureProtocol true
    }
    handler.maven {
        url 'https://maven.aliyun.com/repository/gradle-plugin'
        allowInsecureProtocol true
    }
    handler.maven {
        url 'https://jitpack.io'
        allowInsecureProtocol true
    }
    handler.mavenCentral()
    handler.google()
}

ext.addRepos = this.&addRepos

/**
 * 读取本机配置，主要用于本地差异化构建(local.properties不会提交到仓库)
 */
def readLocalProperty(String key) {
    boolean value = false
    def file = rootProject.file('local.properties')
    if (file.exists() && file.isFile()) {
        Properties properties = new Properties()
        properties.load(file.newDataInputStream())
        value = Boolean.parseBoolean(properties.getProperty(key, 'false'))
    }
    println(String.format("property key=%s value=%S", key, value))
    return value
}

ext.readLocalProperty = this.&readLocalProperty